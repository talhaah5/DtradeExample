package com.web3j_intro.Contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.StaticArray24;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class Depot extends Contract {
    public static final String BINARY = "60806040819052630241ebdb60e61b815273__$210a371a3c02080ea76f89e4eea85c0ccb$__9063907af6c09060849060209060048186803b1580156200004557600080fd5b505af41580156200005a573d6000803e3d6000fd5b505050506040513d60208110156200007157600080fd5b5051603202600f5560408051630241ebdb60e61b8152905173__$210a371a3c02080ea76f89e4eea85c0ccb$__9163907af6c0916004808301926020929190829003018186803b158015620000c557600080fd5b505af4158015620000da573d6000803e3d6000fd5b505050506040513d6020811015620000f157600080fd5b50516101f402601055604080516060810182526814de5b9d1a191554d160ba1b81526c45786368616e6765526174657360981b60208201526564547261646560d01b918101919091526200014a90601290600362000470565b503480156200015857600080fd5b50604051620039fe380380620039fe833981810160405260608110156200017e57600080fd5b5080516020820151604092830151835161030081019485905292939192909182919060129060189082845b815481526020019060010190808311620001a957508893505050506001600160a01b03811662000220576040805162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825560408051928352602083019190915280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a1506000546001600160a01b0316620002cb576040805162461bcd60e51b815260206004820152601160248201527013dddb995c881b5d5cdd081899481cd95d607a1b604482015290519081900360640190fd5b60005460038054610100600160a81b0319166101006001600160a01b0390931692830217905560408051918252517fd5da63a0b864b315bc04128dedbc93888c8529ee6cf47ce664dc204339228c53916020908290030190a16000546001600160a01b031662000376576040805162461bcd60e51b815260206004820152601160248201527013dddb995c881b5d5cdd081899481cd95d607a1b604482015290519081900360640190fd5b60016006556000546001600160a01b0316620003cd576040805162461bcd60e51b815260206004820152601160248201527013dddb995c881b5d5cdd081899481cd95d607a1b604482015290519081900360640190fd5b60005b601881101562000435576000828260188110620003e957fe5b602002015114620004265760098282601881106200040357fe5b60209081029190910151825460018101845560009384529190922001556200042c565b62000435565b600101620003d0565b5050600780546001600160a01b039283166001600160a01b031991821617909155600a80549490921693169290921790915550620004d39050565b8260188101928215620004a1579160200282015b82811115620004a157825182559160200191906001019062000484565b50620004af929150620004b3565b5090565b620004d091905b80821115620004af5760008155600101620004ba565b90565b61351b80620004e36000396000f3fe6080604052600436106102675760003560e01c806379ba509711610144578063b1338cc4116100b6578063c6abb7c71161007a578063c6abb7c7146108ea578063c6c9d8281461091d578063dc8fa6c214610947578063e3235c9114610971578063fd12167f14610986578063fd5a74161461099b57610267565b8063b1338cc41461086c578063b8225dec14610881578063bb7df17214610896578063bd32aa44146108c0578063c58aaae6146108d557610267565b806391b4ded91161010857806391b4ded9146107685780639cb8a26a1461077d578063a461fc8214610792578063aab483d6146107a7578063ab49848c146107d1578063b02c43d01461081f57610267565b806379ba5097146106dc57806381b797dc146106f157806384cb84611461070657806385d29e4f146107295780638da5cb5b1461075357610267565b806326860490116101dd57806353a47bb7116101a157806353a47bb7146105f9578063549014b51461060e5780635c975abb14610638578063631e14441461066157806364e39b87146106945780636d5ab4a9146106c757610267565b806326860490146105425780633278c960146105725780633be99e6f1461058757806345798a75146105ba5780634d0387fb146105e457610267565b80631627540c1161022f5780631627540c1461047c57806316c38b3c146104b157806317c70de4146104dd5780631f930115146104f257806320714f88146104fa5780632194f3a21461052d57610267565b806303413181146103d557806304f3bcec146103ef578063080c279a146104205780630c928bc2146104355780630c928f0514610452575b60068054600101908190556208aa8960eb1b6102816109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156102c457600080fd5b505afa1580156102d8573d6000803e3d6000fd5b505050506040513d60208110156102ee57600080fd5b505115610330576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b60055460ff16156103725760405162461bcd60e51b815260040180806020018281038252603c815260200180613486603c913960400191505060405180910390fd5b61037a610a1b565b505060065481146103d2576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b50005b6103dd61120b565b60408051918252519081900360200190f35b3480156103fb57600080fd5b506104046113da565b604080516001600160a01b039092168252519081900360200190f35b34801561042c57600080fd5b506103dd6113e9565b6103dd6004803603602081101561044b57600080fd5b50356113ef565b34801561045e57600080fd5b506103dd6004803603602081101561047557600080fd5b50356115ba565b34801561048857600080fd5b506104af6004803603602081101561049f57600080fd5b50356001600160a01b0316611651565b005b3480156104bd57600080fd5b506104af600480360360208110156104d457600080fd5b503515156116ad565b3480156104e957600080fd5b506103dd611727565b6103dd61172d565b34801561050657600080fd5b506104af6004803603602081101561051d57600080fd5b50356001600160a01b03166118a0565b34801561053957600080fd5b5061040461195f565b34801561054e57600080fd5b506103dd6004803603604081101561056557600080fd5b508035906020013561196e565b34801561057e57600080fd5b506104af611b3b565b34801561059357600080fd5b506104af600480360360208110156105aa57600080fd5b50356001600160a01b0316611b7d565b3480156105c657600080fd5b506104af600480360360208110156105dd57600080fd5b5035611caa565b3480156105f057600080fd5b506103dd611d42565b34801561060557600080fd5b50610404611d48565b34801561061a57600080fd5b506103dd6004803603602081101561063157600080fd5b5035611d57565b34801561064457600080fd5b5061064d611de6565b604080519115158252519081900360200190f35b34801561066d57600080fd5b5061064d6004803603602081101561068457600080fd5b50356001600160a01b0316611def565b3480156106a057600080fd5b506104af600480360360208110156106b757600080fd5b50356001600160a01b0316611f0a565b3480156106d357600080fd5b506103dd611f6c565b3480156106e857600080fd5b506104af611f72565b3480156106fd57600080fd5b506104af61202e565b6103dd6004803603604081101561071c57600080fd5b5080359060200135612268565b34801561073557600080fd5b506103dd6004803603602081101561074c57600080fd5b50356125ad565b34801561075f57600080fd5b50610404612648565b34801561077457600080fd5b506103dd612657565b34801561078957600080fd5b506104af61265d565b34801561079e57600080fd5b506103dd61276e565b3480156107b357600080fd5b506104af600480360360208110156107ca57600080fd5b5035612775565b3480156107dd57600080fd5b506107e6612865565b604051808261030080838360005b8381101561080c5781810151838201526020016107f4565b5050505090500191505060405180910390f35b34801561082b57600080fd5b506108496004803603602081101561084257600080fd5b50356128ab565b604080516001600160a01b03909316835260208301919091528051918290030190f35b34801561087857600080fd5b506103dd6128d0565b34801561088d57600080fd5b5061064d6128d6565b3480156108a257600080fd5b506104af600480360360208110156108b957600080fd5b50356128df565b3480156108cc57600080fd5b506104af612922565b3480156108e157600080fd5b50610404612973565b3480156108f657600080fd5b506103dd6004803603602081101561090d57600080fd5b50356001600160a01b0316612987565b34801561092957600080fd5b506103dd6004803603602081101561094057600080fd5b5035612999565b34801561095357600080fd5b506104af6004803603602081101561096a57600080fd5b50356129b7565b34801561097d57600080fd5b506103dd612b7b565b34801561099257600080fd5b506103dd612b80565b3480156109a757600080fd5b506103dd600480360360208110156109be57600080fd5b5035612b86565b6000610a166c45786368616e6765526174657360981b6040518060400160405280601d81526020017f4d697373696e672045786368616e676552617465732061646472657373000000815250612c91565b905090565b6000601054341115610a5e5760405162461bcd60e51b81526004018080602001828103825260258152602001806134116025913960400191505060405180910390fd5b600080610aee610a6c6109c5565b6001600160a01b031663ac82f6086208aa8960eb1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610ab557600080fd5b505afa158015610ac9573d6000803e3d6000fd5b505050506040513d6020811015610adf57600080fd5b5051349063ffffffff612d3d16565b600c5490915081905b600082118015610b085750600d5481105b156110b657610b156132dd565b506000818152600b6020908152604091829020825180840190935280546001600160a01b031680845260019091015491830191909152610b6b57600c54610b6390600163ffffffff612d6716565b600c556110ad565b8281602001511115610e0f576020810151600090610b8f908563ffffffff612dc116565b60408051808201825284516001600160a01b03908116825260208083018581526000898152600b909252939020915182546001600160a01b03191691161781559051600190910155600e54909150610be79085612dc1565b600e55610c77610bf56109c5565b6001600160a01b031663ac82f6086208aa8960eb1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610c3e57600080fd5b505afa158015610c52573d6000803e3d6000fd5b505050506040513d6020811015610c6857600080fd5b5051859063ffffffff612e1e16565b82516040519197506001600160a01b03169087156108fc029088906000818181858888f19350505050610d2557600a546040516001600160a01b039091169087156108fc029088906000818181858888f19350505050158015610cde573d6000803e3d6000fd5b5081516040805188815290516001600160a01b03909216917ff2435d3901399daa085f8b58d2409fff9b83ce4ca97c1f144b532f5a08b1c96c9181900360200190a2610d71565b81516040805188815260208101879052815186936001600160a01b03169233927f6d957e9e816107f67cb7118461e3c259e96896f80223c9af2972596c2fdd401c929081900390910190a45b610d79612e48565b6001600160a01b031663a9059cbb33866040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b505050506040513d6020811015610e0257600080fd5b50600094506110ad915050565b828160200151116110ad576000828152600b6020526040812080546001600160a01b0319168155600190810191909155600c54610e519163ffffffff612d6716565b600c556020810151600e54610e6b9163ffffffff612dc116565b600e55610eff610e796109c5565b6001600160a01b031663ac82f6086208aa8960eb1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610ec257600080fd5b505afa158015610ed6573d6000803e3d6000fd5b505050506040513d6020811015610eec57600080fd5b505160208301519063ffffffff612e1e16565b81516040519196506001600160a01b03169086156108fc029087906000818181858888f19350505050610fad57600a546040516001600160a01b039091169086156108fc029087906000818181858888f19350505050158015610f66573d6000803e3d6000fd5b5080516040805187815290516001600160a01b03909216917ff2435d3901399daa085f8b58d2409fff9b83ce4ca97c1f144b532f5a08b1c96c9181900360200190a2610ffd565b80516020808301516040805189815292830191909152805185936001600160a01b03169233927f6d957e9e816107f67cb7118461e3c259e96896f80223c9af2972596c2fdd401c92918290030190a45b611005612e48565b6001600160a01b031663a9059cbb3383602001516040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561106857600080fd5b505af115801561107c573d6000803e3d6000fd5b505050506040513d602081101561109257600080fd5b505060208101516110aa90849063ffffffff612dc116565b92505b50600101610af7565b50801561117857336108fc61114e6110cc6109c5565b6001600160a01b031663ac82f6086208aa8960eb1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561111557600080fd5b505afa158015611129573d6000803e3d6000fd5b505050506040513d602081101561113f57600080fd5b5051849063ffffffff612e1e16565b6040518115909202916000818181858888f19350505050158015611176573d6000803e3d6000fd5b505b600061118a838363ffffffff612dc116565b9050801561120357604080513460208201526060810183905260808082526003908201526208aa8960eb1b60a082015260c081830181905260049082015263191554d160e21b60e082015290517fdb1741ffc6844b04a9284bb6337fb0ccfe543a493ef0ac8e725242201e93d4bd918190036101000190a15b935050505090565b60006211115560ea1b61121c6109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561125f57600080fd5b505afa158015611273573d6000803e3d6000fd5b505050506040513d602081101561128957600080fd5b5051156112cb576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b6208aa8960eb1b6112da6109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561131d57600080fd5b505afa158015611331573d6000803e3d6000fd5b505050506040513d602081101561134757600080fd5b505115611389576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b60055460ff16156113cb5760405162461bcd60e51b815260040180806020018281038252603c815260200180613486603c913960400191505060405180910390fd5b6113d3612e95565b9250505090565b6007546001600160a01b031681565b600f5481565b60006208aa8960eb1b6114006109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561144357600080fd5b505afa158015611457573d6000803e3d6000fd5b505050506040513d602081101561146d57600080fd5b5051156114af576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b60055460ff16156114f15760405162461bcd60e51b815260040180806020018281038252603c815260200180613486603c913960400191505060405180910390fd5b6114f96109c5565b6001600160a01b031663ac82f6086208aa8960eb1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561154257600080fd5b505afa158015611556573d6000803e3d6000fd5b505050506040513d602081101561156c57600080fd5b505183146115ab5760405162461bcd60e51b81526004018080602001828103825260258152602001806134c26025913960400191505060405180910390fd5b6115b3610a1b565b9392505050565b60006116496115c76109c5565b6001600160a01b031663ac82f6086208aa8960eb1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561161057600080fd5b505afa158015611624573d6000803e3d6000fd5b505050506040513d602081101561163a57600080fd5b5051839063ffffffff612d3d16565b90505b919050565b611659612fe2565b600180546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229181900360200190a150565b6116b5612fe2565b60055460ff16151581151514156116cb57611724565b6005805460ff1916821515179081905560ff16156116e857426004555b6005546040805160ff90921615158252517f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec59181900360200190a15b50565b60025481565b60068054600101908190556000906208aa8960eb1b61174a6109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561178d57600080fd5b505afa1580156117a1573d6000803e3d6000fd5b505050506040513d60208110156117b757600080fd5b5051156117f9576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b60055460ff161561183b5760405162461bcd60e51b815260040180806020018281038252603c815260200180613486603c913960400191505060405180910390fd5b611843610a1b565b925050600654811461189c576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b5090565b6118a8612fe2565b6001600160a01b038116611903576040805162461bcd60e51b815260206004820152601c60248201527f42656e6566696369617279206d757374206e6f74206265207a65726f00000000604482015290519081900360640190fd5b600380546001600160a01b0383166101008102610100600160a81b03199092169190911790915560408051918252517fd5da63a0b864b315bc04128dedbc93888c8529ee6cf47ce664dc204339228c539181900360200190a150565b600a546001600160a01b031681565b60006211115560ea1b61197f6109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156119c257600080fd5b505afa1580156119d6573d6000803e3d6000fd5b505050506040513d60208110156119ec57600080fd5b505115611a2e576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b60055460ff1615611a705760405162461bcd60e51b815260040180806020018281038252603c815260200180613486603c913960400191505060405180910390fd5b611a786109c5565b6001600160a01b031663ac82f6086211115560ea1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611ac157600080fd5b505afa158015611ad5573d6000803e3d6000fd5b505050506040513d6020811015611aeb57600080fd5b50518314611b2a5760405162461bcd60e51b81526004018080602001828103825260258152602001806134c26025913960400191505060405180910390fd5b611b338461302d565b949350505050565b611b43612fe2565b600060028190556003805460ff191690556040517f6adcc7125002935e0aa31697538ebbd65cfddf20431eb6ecdcfc3e238bfd082c9190a1565b611b85612fe2565b600780546001600160a01b0319166001600160a01b03831617905560005b600954811015611ca657600060098281548110611bbc57fe5b600091825260209182902001546007546040805163dacb2d0160e01b81526004810184905260248101829052601760448201527f5265736f6c766572206d697373696e6720746172676574000000000000000000606482015290519294506001600160a01b039091169263dacb2d0192608480840193829003018186803b158015611c4657600080fd5b505afa158015611c5a573d6000803e3d6000fd5b505050506040513d6020811015611c7057600080fd5b505160009182526008602052604090912080546001600160a01b0319166001600160a01b03909216919091179055600101611ba3565b5050565b611cb2612fe2565b611cba6131d7565b600080546040805163a9059cbb60e01b81526001600160a01b039283166004820152602481018690529051939091169263a9059cbb92604480840193602093929083900390910190829087803b158015611d1357600080fd5b505af1158015611d27573d6000803e3d6000fd5b505050506040513d6020811015611d3d57600080fd5b505050565b600e5481565b6001546001600160a01b031681565b6000611649611d646109c5565b6001600160a01b031663ac82f6086211115560ea1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611dad57600080fd5b505afa158015611dc1573d6000803e3d6000fd5b505050506040513d6020811015611dd757600080fd5b5051839063ffffffff612e1e16565b60055460ff1681565b6007546000906001600160a01b03838116911614611e0f5750600061164c565b60005b600954811015611f0157600060098281548110611e2b57fe5b6000918252602080832090910154808352600882526040928390205460075484516321f8a72160e01b81526004810184905294519295506001600160a01b03918216949116926321f8a72192602480840193829003018186803b158015611e9157600080fd5b505afa158015611ea5573d6000803e3d6000fd5b505050506040513d6020811015611ebb57600080fd5b50516001600160a01b0316141580611ee857506000818152600860205260409020546001600160a01b0316155b15611ef85760009250505061164c565b50600101611e12565b50600192915050565b611f12612fe2565b600a80546001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517f4deb077bf9c4bc824cc2c989e01a5e53b0a4ecc44c5039d46abc9ffc88f8a050916020908290030190a150565b600c5481565b6001546001600160a01b03163314611fbb5760405162461bcd60e51b815260040180806020018281038252603581526020018061333f6035913960400191505060405180910390fd5b600054600154604080516001600160a01b03938416815292909116602083015280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b600c546000905b600d54811015612111576120476132dd565b506000818152600b6020908152604091829020825180840190935280546001600160a01b03168084526001909101549183019190915233141561210857602081015161209a90849063ffffffff612d6716565b6000838152600b6020908152604080832080546001600160a01b0319168155600101929092558351848201518351908152925193965085936001600160a01b03909116927f3aa2b18eace5e5727a4ab525921b9b0a1ca1afdb0f96b599e3ab2d76cb5e7f7292908290030190a35b50600101612035565b50600e54612125908263ffffffff612dc116565b600e553360009081526011602052604090205461214990829063ffffffff612d6716565b336000908152601160205260408120559050806121975760405162461bcd60e51b81526004018080602001828103825260218152602001806133746021913960400191505060405180910390fd5b61219f612e48565b6001600160a01b031663a9059cbb33836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156121fe57600080fd5b505af1158015612212573d6000803e3d6000fd5b505050506040513d602081101561222857600080fd5b5050604080513381526020810183905281517faf6ec623f558c7b3527ff6c9c09432c7d81a3d38bd2e1eaaee2efe7aac23c28b929181900390910190a150565b60006211115560ea1b6122796109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156122bc57600080fd5b505afa1580156122d0573d6000803e3d6000fd5b505050506040513d60208110156122e657600080fd5b505115612328576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b6208aa8960eb1b6123376109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561237a57600080fd5b505afa15801561238e573d6000803e3d6000fd5b505050506040513d60208110156123a457600080fd5b5051156123e6576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b60055460ff16156124285760405162461bcd60e51b815260040180806020018281038252603c815260200180613486603c913960400191505060405180910390fd5b6124306109c5565b6001600160a01b031663ac82f6086208aa8960eb1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561247957600080fd5b505afa15801561248d573d6000803e3d6000fd5b505050506040513d60208110156124a357600080fd5b505185146124e25760405162461bcd60e51b815260040180806020018281038252602b815260200180613314602b913960400191505060405180910390fd5b6124ea6109c5565b6001600160a01b031663ac82f6086211115560ea1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561253357600080fd5b505afa158015612547573d6000803e3d6000fd5b505050506040513d602081101561255d57600080fd5b5051841461259c5760405162461bcd60e51b815260040180806020018281038252602c815260200180613395602c913960400191505060405180910390fd5b6125a4612e95565b95945050505050565b60008061263d6125bb6109c5565b6001600160a01b031663ac82f6086208aa8960eb1b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561260457600080fd5b505afa158015612618573d6000803e3d6000fd5b505050506040513d602081101561262e57600080fd5b5051849063ffffffff612d3d16565b90506115b381611d57565b6000546001600160a01b031681565b60045481565b612665612fe2565b60035460ff166126bc576040805162461bcd60e51b815260206004820152601f60248201527f53656c66204465737472756374206e6f742079657420696e6974696174656400604482015290519081900360640190fd5b426224ea006002540110612717576040805162461bcd60e51b815260206004820152601b60248201527f53656c662064657374727563742064656c6179206e6f74206d65740000000000604482015290519081900360640190fd5b600354604080516101009092046001600160a01b03168252517f8a09e1677ced846cb537dc2b172043bd05a1a81ad7e0033a7ef8ba762df990b7916020908290030190a160035461010090046001600160a01b0316ff5b6224ea0081565b61277d612fe2565b73__$210a371a3c02080ea76f89e4eea85c0ccb$__63907af6c06040518163ffffffff1660e01b815260040160206040518083038186803b1580156127c157600080fd5b505af41580156127d5573d6000803e3d6000fd5b505050506040513d60208110156127eb57600080fd5b5051811161282a5760405162461bcd60e51b81526004018080602001828103825260308152602001806134566030913960400191505060405180910390fd5b600f8190556040805182815290517fa39eacd162ee82c70b2b030a1bc8fe89adcccc61122fad4821a8772dbcc542679181900360200190a150565b61286d6132f4565b60005b60095481101561189c576009818154811061288757fe5b906000526020600020015482826018811061289e57fe5b6020020152600101612870565b600b60205260009081526040902080546001909101546001600160a01b039091169082565b60105481565b60035460ff1681565b6128e7612fe2565b60108190556040805182815290517fdc2be810a133e01cb21a41082f15b2863d96f9fe79d1f84d7e2d5b810c5c82439181900360200190a150565b61292a612fe2565b426002556003805460ff19166001179055604080516224ea00815290517fcbd94ca75b8dc45c9d80c77e851670e78843c0d75180cb81db3e2158228fa9a69181900360200190a1565b60035461010090046001600160a01b031681565b60116020526000908152604090205481565b600981815481106129a657fe5b600091825260209091200154905081565b6129bf612e48565b604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b0392909216916323b872dd916064808201926020929091908290030181600087803b158015612a1757600080fd5b505af1158015612a2b573d6000803e3d6000fd5b505050506040513d6020811015612a4157600080fd5b5050600f54811015612aca5733600090815260116020526040902054612a6d908263ffffffff612d6716565b3360008181526011602090815260409182902093909355600f5481519283529282018490528181019290925290517fbc3a12638d840d60760c64b39c73985a6498cf6eb8176f124995b0e07236cbd29181900360600190a1611724565b604080518082018252338082526020808301858152600d80546000908152600b8452869020945185546001600160a01b0319166001600160a01b039091161785559051600190940193909355915483518581529351909391927fd9acabe6e09d178728ba5c366661c5be0621b4770f216305b059ec175b37e0b4928290030190a3600d54612b5f90600163ffffffff612d6716565b600d55600e54612b75908263ffffffff612d6716565b600e5550565b601881565b600d5481565b60006211115560ea1b612b976109c5565b6001600160a01b0316632528f0fe826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612bda57600080fd5b505afa158015612bee573d6000803e3d6000fd5b505050506040513d6020811015612c0457600080fd5b505115612c46576040805162461bcd60e51b815260206004820152601b6024820152600080516020613436833981519152604482015290519081900360640190fd5b60055460ff1615612c885760405162461bcd60e51b815260040180806020018281038252603c815260200180613486603c913960400191505060405180910390fd5b6115b38361302d565b6000828152600860205260408120546001600160a01b03168281612d335760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612cf8578181015183820152602001612ce0565b50505050905090810190601f168015612d255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5090505b92915050565b6000670de0b6b3a7640000612d58848463ffffffff61321a16565b81612d5f57fe5b049392505050565b6000828201838110156115b3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082821115612e18576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60006115b382612e3c85670de0b6b3a764000063ffffffff61321a16565b9063ffffffff61327316565b6000610a166814de5b9d1a191554d160ba1b6040518060400160405280601981526020017f4d697373696e672053796e746864555344206164647265737300000000000000815250612c91565b600080612ea1346125ad565b600a546040519192506001600160a01b0316903480156108fc02916000818181858888f19350505050158015612edb573d6000803e3d6000fd5b50612ee46131d7565b6001600160a01b031663a9059cbb33836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015612f4357600080fd5b505af1158015612f57573d6000803e3d6000fd5b505050506040513d6020811015612f6d57600080fd5b50506040805134602082015260608101839052608080825260039082018190526208aa8960eb1b60a083015260c08284018190528201526211115560ea1b60e082015290517fdb1741ffc6844b04a9284bb6337fb0ccfe543a493ef0ac8e725242201e93d4bd918190036101000190a1905090565b6000546001600160a01b0316331461302b5760405162461bcd60e51b815260040180806020018281038252602f8152602001806133c1602f913960400191505060405180910390fd5b565b60008061303983611d57565b9050613043612e48565b600a54604080516323b872dd60e01b81523360048201526001600160a01b03928316602482015260448101879052905192909116916323b872dd916064808201926020929091908290030181600087803b1580156130a057600080fd5b505af11580156130b4573d6000803e3d6000fd5b505050506040513d60208110156130ca57600080fd5b506130d590506131d7565b6001600160a01b031663a9059cbb33836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561313457600080fd5b505af1158015613148573d6000803e3d6000fd5b505050506040513d602081101561315e57600080fd5b5050604080516020810185905260608101839052608080825260049082015263191554d160e21b60a082015260c08183018190526003908201526211115560ea1b60e082015290517fdb1741ffc6844b04a9284bb6337fb0ccfe543a493ef0ac8e725242201e93d4bd918190036101000190a192915050565b6000610a166564547261646560d01b604051806040016040528060168152602001754d697373696e6720645472616465206164647265737360501b815250612c91565b60008261322957506000612d37565b8282028284828161323657fe5b04146115b35760405162461bcd60e51b81526004018080602001828103825260218152602001806133f06021913960400191505060405180910390fd5b60008082116132c9576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b60008284816132d457fe5b04949350505050565b604080518082019091526000808252602082015290565b604051806103000160405280601890602082028038833950919291505056fe47756172616e74656564206574686572207261746520776f756c64206e6f74206265207265636569766564596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970596f752068617665206e6f206465706f7369747320746f2077697468647261772e47756172616e7465656420647472616465207261746520776f756c64206e6f742062652072656365697665644f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745544820616d6f756e742061626f7665206d61784574685075726368617365206c696d69745261746520696e76616c6964206f72206e6f7420612073796e746800000000004d696e696d756d206465706f73697420616d6f756e74206d7573742062652067726561746572207468616e20554e49545468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e74726163742069732070617573656447756172616e74656564207261746520776f756c64206e6f74206265207265636569766564a265627a7a72315820c1147cd720be5dd20e70463045d6104a6adb12e673713641d81333775222954364736f6c63430005100032\n"
            + "\n"
            + "// $210a371a3c02080ea76f89e4eea85c0ccb$ -> dtradeContracts.sol:SafeDecimalMath\n"
            + "// $210a371a3c02080ea76f89e4eea85c0ccb$ -> dtradeContracts.sol:SafeDecimalMath\n"
            + "// $210a371a3c02080ea76f89e4eea85c0ccb$ -> dtradeContracts.sol:SafeDecimalMath";

    public static final String FUNC_MAX_ADDRESSES_FROM_RESOLVER = "MAX_ADDRESSES_FROM_RESOLVER";

    public static final String FUNC_SELFDESTRUCT_DELAY = "SELFDESTRUCT_DELAY";

    public static final String FUNC_ACCEPTOWNERSHIP = "acceptOwnership";

    public static final String FUNC_DEPOSITENDINDEX = "depositEndIndex";

    public static final String FUNC_DEPOSITSTARTINDEX = "depositStartIndex";

    public static final String FUNC_DEPOSITSYNTHS = "depositSynths";

    public static final String FUNC_DEPOSITS = "deposits";

    public static final String FUNC_DTRADERECEIVEDFORETHER = "dtradeReceivedForEther";

    public static final String FUNC_DTRADERECEIVEDFORSYNTHS = "dtradeReceivedForSynths";

    public static final String FUNC_EXCHANGEETHERFORDET = "exchangeEtherForDET";

    public static final String FUNC_EXCHANGEETHERFORDETATRATE = "exchangeEtherForDETAtRate";

    public static final String FUNC_EXCHANGEETHERFORSYNTHS = "exchangeEtherForSynths";

    public static final String FUNC_EXCHANGEETHERFORSYNTHSATRATE = "exchangeEtherForSynthsAtRate";

    public static final String FUNC_EXCHANGESYNTHSFORDET = "exchangeSynthsForDET";

    public static final String FUNC_EXCHANGESYNTHSFORDETATRATE = "exchangeSynthsForDETAtRate";

    public static final String FUNC_FUNDSWALLET = "fundsWallet";

    public static final String FUNC_GETRESOLVERADDRESSESREQUIRED = "getResolverAddressesRequired";

    public static final String FUNC_INITIATESELFDESTRUCT = "initiateSelfDestruct";

    public static final String FUNC_INITIATIONTIME = "initiationTime";

    public static final String FUNC_ISRESOLVERCACHED = "isResolverCached";

    public static final String FUNC_LASTPAUSETIME = "lastPauseTime";

    public static final String FUNC_MAXETHPURCHASE = "maxEthPurchase";

    public static final String FUNC_MINIMUMDEPOSITAMOUNT = "minimumDepositAmount";

    public static final String FUNC_NOMINATENEWOWNER = "nominateNewOwner";

    public static final String FUNC_NOMINATEDOWNER = "nominatedOwner";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_RESOLVER = "resolver";

    public static final String FUNC_RESOLVERADDRESSESREQUIRED = "resolverAddressesRequired";

    public static final String FUNC_SELFDESTRUCT = "selfDestruct";

    public static final String FUNC_SELFDESTRUCTBENEFICIARY = "selfDestructBeneficiary";

    public static final String FUNC_SELFDESTRUCTINITIATED = "selfDestructInitiated";

    public static final String FUNC_SETFUNDSWALLET = "setFundsWallet";

    public static final String FUNC_SETMAXETHPURCHASE = "setMaxEthPurchase";

    public static final String FUNC_SETMINIMUMDEPOSITAMOUNT = "setMinimumDepositAmount";

    public static final String FUNC_SETPAUSED = "setPaused";

    public static final String FUNC_SETRESOLVERANDSYNCCACHE = "setResolverAndSyncCache";

    public static final String FUNC_SETSELFDESTRUCTBENEFICIARY = "setSelfDestructBeneficiary";

    public static final String FUNC_SMALLDEPOSITS = "smallDeposits";

    public static final String FUNC_SYNTHSRECEIVEDFORETHER = "synthsReceivedForEther";

    public static final String FUNC_TERMINATESELFDESTRUCT = "terminateSelfDestruct";

    public static final String FUNC_TOTALSELLABLEDEPOSITS = "totalSellableDeposits";

    public static final String FUNC_WITHDRAWMYDEPOSITEDSYNTHS = "withdrawMyDepositedSynths";

    public static final String FUNC_WITHDRAWDTRADE = "withdrawdTrade";

    public static final Event CLEAREDDEPOSIT_EVENT = new Event("ClearedDeposit", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>(true) {}));
    ;

    public static final Event EXCHANGE_EVENT = new Event("Exchange", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event FUNDSWALLETUPDATED_EVENT = new Event("FundsWalletUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event MAXETHPURCHASEUPDATED_EVENT = new Event("MaxEthPurchaseUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event MINIMUMDEPOSITAMOUNTUPDATED_EVENT = new Event("MinimumDepositAmountUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event NONPAYABLECONTRACT_EVENT = new Event("NonPayableContract", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event OWNERCHANGED_EVENT = new Event("OwnerChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event OWNERNOMINATED_EVENT = new Event("OwnerNominated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event PAUSECHANGED_EVENT = new Event("PauseChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    ;

    public static final Event SELFDESTRUCTBENEFICIARYUPDATED_EVENT = new Event("SelfDestructBeneficiaryUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event SELFDESTRUCTINITIATED_EVENT = new Event("SelfDestructInitiated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event SELFDESTRUCTTERMINATED_EVENT = new Event("SelfDestructTerminated", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final Event SELFDESTRUCTED_EVENT = new Event("SelfDestructed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event SYNTHDEPOSIT_EVENT = new Event("SynthDeposit", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>(true) {}));
    ;

    public static final Event SYNTHDEPOSITNOTACCEPTED_EVENT = new Event("SynthDepositNotAccepted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event SYNTHDEPOSITREMOVED_EVENT = new Event("SynthDepositRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>(true) {}));
    ;

    public static final Event SYNTHWITHDRAWAL_EVENT = new Event("SynthWithdrawal", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected Depot(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Depot(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Depot(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Depot(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ClearedDepositEventResponse> getClearedDepositEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(CLEAREDDEPOSIT_EVENT, transactionReceipt);
        ArrayList<ClearedDepositEventResponse> responses = new ArrayList<ClearedDepositEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ClearedDepositEventResponse typedResponse = new ClearedDepositEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.fromAddress = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.toAddress = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.depositIndex = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
            typedResponse.fromETHAmount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.toAmount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ClearedDepositEventResponse> clearedDepositEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ClearedDepositEventResponse>() {
            @Override
            public ClearedDepositEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CLEAREDDEPOSIT_EVENT, log);
                ClearedDepositEventResponse typedResponse = new ClearedDepositEventResponse();
                typedResponse.log = log;
                typedResponse.fromAddress = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.toAddress = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.depositIndex = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
                typedResponse.fromETHAmount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.toAmount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ClearedDepositEventResponse> clearedDepositEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CLEAREDDEPOSIT_EVENT));
        return clearedDepositEventFlowable(filter);
    }

    public List<ExchangeEventResponse> getExchangeEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EXCHANGE_EVENT, transactionReceipt);
        ArrayList<ExchangeEventResponse> responses = new ArrayList<ExchangeEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ExchangeEventResponse typedResponse = new ExchangeEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.fromCurrency = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.fromAmount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.toCurrency = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.toAmount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ExchangeEventResponse> exchangeEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ExchangeEventResponse>() {
            @Override
            public ExchangeEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EXCHANGE_EVENT, log);
                ExchangeEventResponse typedResponse = new ExchangeEventResponse();
                typedResponse.log = log;
                typedResponse.fromCurrency = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.fromAmount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.toCurrency = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.toAmount = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ExchangeEventResponse> exchangeEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EXCHANGE_EVENT));
        return exchangeEventFlowable(filter);
    }

    public List<FundsWalletUpdatedEventResponse> getFundsWalletUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FUNDSWALLETUPDATED_EVENT, transactionReceipt);
        ArrayList<FundsWalletUpdatedEventResponse> responses = new ArrayList<FundsWalletUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            FundsWalletUpdatedEventResponse typedResponse = new FundsWalletUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.newFundsWallet = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FundsWalletUpdatedEventResponse> fundsWalletUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, FundsWalletUpdatedEventResponse>() {
            @Override
            public FundsWalletUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FUNDSWALLETUPDATED_EVENT, log);
                FundsWalletUpdatedEventResponse typedResponse = new FundsWalletUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.newFundsWallet = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FundsWalletUpdatedEventResponse> fundsWalletUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FUNDSWALLETUPDATED_EVENT));
        return fundsWalletUpdatedEventFlowable(filter);
    }

    public List<MaxEthPurchaseUpdatedEventResponse> getMaxEthPurchaseUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MAXETHPURCHASEUPDATED_EVENT, transactionReceipt);
        ArrayList<MaxEthPurchaseUpdatedEventResponse> responses = new ArrayList<MaxEthPurchaseUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MaxEthPurchaseUpdatedEventResponse typedResponse = new MaxEthPurchaseUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MaxEthPurchaseUpdatedEventResponse> maxEthPurchaseUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MaxEthPurchaseUpdatedEventResponse>() {
            @Override
            public MaxEthPurchaseUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MAXETHPURCHASEUPDATED_EVENT, log);
                MaxEthPurchaseUpdatedEventResponse typedResponse = new MaxEthPurchaseUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MaxEthPurchaseUpdatedEventResponse> maxEthPurchaseUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MAXETHPURCHASEUPDATED_EVENT));
        return maxEthPurchaseUpdatedEventFlowable(filter);
    }

    public List<MinimumDepositAmountUpdatedEventResponse> getMinimumDepositAmountUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MINIMUMDEPOSITAMOUNTUPDATED_EVENT, transactionReceipt);
        ArrayList<MinimumDepositAmountUpdatedEventResponse> responses = new ArrayList<MinimumDepositAmountUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MinimumDepositAmountUpdatedEventResponse typedResponse = new MinimumDepositAmountUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MinimumDepositAmountUpdatedEventResponse> minimumDepositAmountUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MinimumDepositAmountUpdatedEventResponse>() {
            @Override
            public MinimumDepositAmountUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MINIMUMDEPOSITAMOUNTUPDATED_EVENT, log);
                MinimumDepositAmountUpdatedEventResponse typedResponse = new MinimumDepositAmountUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MinimumDepositAmountUpdatedEventResponse> minimumDepositAmountUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MINIMUMDEPOSITAMOUNTUPDATED_EVENT));
        return minimumDepositAmountUpdatedEventFlowable(filter);
    }

    public List<NonPayableContractEventResponse> getNonPayableContractEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(NONPAYABLECONTRACT_EVENT, transactionReceipt);
        ArrayList<NonPayableContractEventResponse> responses = new ArrayList<NonPayableContractEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            NonPayableContractEventResponse typedResponse = new NonPayableContractEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.receiver = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<NonPayableContractEventResponse> nonPayableContractEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, NonPayableContractEventResponse>() {
            @Override
            public NonPayableContractEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(NONPAYABLECONTRACT_EVENT, log);
                NonPayableContractEventResponse typedResponse = new NonPayableContractEventResponse();
                typedResponse.log = log;
                typedResponse.receiver = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<NonPayableContractEventResponse> nonPayableContractEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(NONPAYABLECONTRACT_EVENT));
        return nonPayableContractEventFlowable(filter);
    }

    public List<OwnerChangedEventResponse> getOwnerChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERCHANGED_EVENT, transactionReceipt);
        ArrayList<OwnerChangedEventResponse> responses = new ArrayList<OwnerChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnerChangedEventResponse typedResponse = new OwnerChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldOwner = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnerChangedEventResponse> ownerChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnerChangedEventResponse>() {
            @Override
            public OwnerChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERCHANGED_EVENT, log);
                OwnerChangedEventResponse typedResponse = new OwnerChangedEventResponse();
                typedResponse.log = log;
                typedResponse.oldOwner = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnerChangedEventResponse> ownerChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERCHANGED_EVENT));
        return ownerChangedEventFlowable(filter);
    }

    public List<OwnerNominatedEventResponse> getOwnerNominatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERNOMINATED_EVENT, transactionReceipt);
        ArrayList<OwnerNominatedEventResponse> responses = new ArrayList<OwnerNominatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnerNominatedEventResponse typedResponse = new OwnerNominatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.newOwner = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnerNominatedEventResponse> ownerNominatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnerNominatedEventResponse>() {
            @Override
            public OwnerNominatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERNOMINATED_EVENT, log);
                OwnerNominatedEventResponse typedResponse = new OwnerNominatedEventResponse();
                typedResponse.log = log;
                typedResponse.newOwner = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnerNominatedEventResponse> ownerNominatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERNOMINATED_EVENT));
        return ownerNominatedEventFlowable(filter);
    }

    public List<PauseChangedEventResponse> getPauseChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PAUSECHANGED_EVENT, transactionReceipt);
        ArrayList<PauseChangedEventResponse> responses = new ArrayList<PauseChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PauseChangedEventResponse typedResponse = new PauseChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.isPaused = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PauseChangedEventResponse> pauseChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PauseChangedEventResponse>() {
            @Override
            public PauseChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PAUSECHANGED_EVENT, log);
                PauseChangedEventResponse typedResponse = new PauseChangedEventResponse();
                typedResponse.log = log;
                typedResponse.isPaused = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PauseChangedEventResponse> pauseChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSECHANGED_EVENT));
        return pauseChangedEventFlowable(filter);
    }

    public List<SelfDestructBeneficiaryUpdatedEventResponse> getSelfDestructBeneficiaryUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SELFDESTRUCTBENEFICIARYUPDATED_EVENT, transactionReceipt);
        ArrayList<SelfDestructBeneficiaryUpdatedEventResponse> responses = new ArrayList<SelfDestructBeneficiaryUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SelfDestructBeneficiaryUpdatedEventResponse typedResponse = new SelfDestructBeneficiaryUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.newBeneficiary = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SelfDestructBeneficiaryUpdatedEventResponse> selfDestructBeneficiaryUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SelfDestructBeneficiaryUpdatedEventResponse>() {
            @Override
            public SelfDestructBeneficiaryUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SELFDESTRUCTBENEFICIARYUPDATED_EVENT, log);
                SelfDestructBeneficiaryUpdatedEventResponse typedResponse = new SelfDestructBeneficiaryUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.newBeneficiary = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SelfDestructBeneficiaryUpdatedEventResponse> selfDestructBeneficiaryUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SELFDESTRUCTBENEFICIARYUPDATED_EVENT));
        return selfDestructBeneficiaryUpdatedEventFlowable(filter);
    }

    public List<SelfDestructInitiatedEventResponse> getSelfDestructInitiatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SELFDESTRUCTINITIATED_EVENT, transactionReceipt);
        ArrayList<SelfDestructInitiatedEventResponse> responses = new ArrayList<SelfDestructInitiatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SelfDestructInitiatedEventResponse typedResponse = new SelfDestructInitiatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.selfDestructDelay = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SelfDestructInitiatedEventResponse> selfDestructInitiatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SelfDestructInitiatedEventResponse>() {
            @Override
            public SelfDestructInitiatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SELFDESTRUCTINITIATED_EVENT, log);
                SelfDestructInitiatedEventResponse typedResponse = new SelfDestructInitiatedEventResponse();
                typedResponse.log = log;
                typedResponse.selfDestructDelay = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SelfDestructInitiatedEventResponse> selfDestructInitiatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SELFDESTRUCTINITIATED_EVENT));
        return selfDestructInitiatedEventFlowable(filter);
    }

    public List<SelfDestructTerminatedEventResponse> getSelfDestructTerminatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SELFDESTRUCTTERMINATED_EVENT, transactionReceipt);
        ArrayList<SelfDestructTerminatedEventResponse> responses = new ArrayList<SelfDestructTerminatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SelfDestructTerminatedEventResponse typedResponse = new SelfDestructTerminatedEventResponse();
            typedResponse.log = eventValues.getLog();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SelfDestructTerminatedEventResponse> selfDestructTerminatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SelfDestructTerminatedEventResponse>() {
            @Override
            public SelfDestructTerminatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SELFDESTRUCTTERMINATED_EVENT, log);
                SelfDestructTerminatedEventResponse typedResponse = new SelfDestructTerminatedEventResponse();
                typedResponse.log = log;
                return typedResponse;
            }
        });
    }

    public Flowable<SelfDestructTerminatedEventResponse> selfDestructTerminatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SELFDESTRUCTTERMINATED_EVENT));
        return selfDestructTerminatedEventFlowable(filter);
    }

    public List<SelfDestructedEventResponse> getSelfDestructedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SELFDESTRUCTED_EVENT, transactionReceipt);
        ArrayList<SelfDestructedEventResponse> responses = new ArrayList<SelfDestructedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SelfDestructedEventResponse typedResponse = new SelfDestructedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.beneficiary = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SelfDestructedEventResponse> selfDestructedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SelfDestructedEventResponse>() {
            @Override
            public SelfDestructedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SELFDESTRUCTED_EVENT, log);
                SelfDestructedEventResponse typedResponse = new SelfDestructedEventResponse();
                typedResponse.log = log;
                typedResponse.beneficiary = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SelfDestructedEventResponse> selfDestructedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SELFDESTRUCTED_EVENT));
        return selfDestructedEventFlowable(filter);
    }

    public List<SynthDepositEventResponse> getSynthDepositEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SYNTHDEPOSIT_EVENT, transactionReceipt);
        ArrayList<SynthDepositEventResponse> responses = new ArrayList<SynthDepositEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SynthDepositEventResponse typedResponse = new SynthDepositEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.user = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.depositIndex = (BigInteger) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SynthDepositEventResponse> synthDepositEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SynthDepositEventResponse>() {
            @Override
            public SynthDepositEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SYNTHDEPOSIT_EVENT, log);
                SynthDepositEventResponse typedResponse = new SynthDepositEventResponse();
                typedResponse.log = log;
                typedResponse.user = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.depositIndex = (BigInteger) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SynthDepositEventResponse> synthDepositEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SYNTHDEPOSIT_EVENT));
        return synthDepositEventFlowable(filter);
    }

    public List<SynthDepositNotAcceptedEventResponse> getSynthDepositNotAcceptedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SYNTHDEPOSITNOTACCEPTED_EVENT, transactionReceipt);
        ArrayList<SynthDepositNotAcceptedEventResponse> responses = new ArrayList<SynthDepositNotAcceptedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SynthDepositNotAcceptedEventResponse typedResponse = new SynthDepositNotAcceptedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.user = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.minimum = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SynthDepositNotAcceptedEventResponse> synthDepositNotAcceptedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SynthDepositNotAcceptedEventResponse>() {
            @Override
            public SynthDepositNotAcceptedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SYNTHDEPOSITNOTACCEPTED_EVENT, log);
                SynthDepositNotAcceptedEventResponse typedResponse = new SynthDepositNotAcceptedEventResponse();
                typedResponse.log = log;
                typedResponse.user = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.minimum = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SynthDepositNotAcceptedEventResponse> synthDepositNotAcceptedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SYNTHDEPOSITNOTACCEPTED_EVENT));
        return synthDepositNotAcceptedEventFlowable(filter);
    }

    public List<SynthDepositRemovedEventResponse> getSynthDepositRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SYNTHDEPOSITREMOVED_EVENT, transactionReceipt);
        ArrayList<SynthDepositRemovedEventResponse> responses = new ArrayList<SynthDepositRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SynthDepositRemovedEventResponse typedResponse = new SynthDepositRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.user = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.depositIndex = (BigInteger) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SynthDepositRemovedEventResponse> synthDepositRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SynthDepositRemovedEventResponse>() {
            @Override
            public SynthDepositRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SYNTHDEPOSITREMOVED_EVENT, log);
                SynthDepositRemovedEventResponse typedResponse = new SynthDepositRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.user = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.depositIndex = (BigInteger) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SynthDepositRemovedEventResponse> synthDepositRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SYNTHDEPOSITREMOVED_EVENT));
        return synthDepositRemovedEventFlowable(filter);
    }

    public List<SynthWithdrawalEventResponse> getSynthWithdrawalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SYNTHWITHDRAWAL_EVENT, transactionReceipt);
        ArrayList<SynthWithdrawalEventResponse> responses = new ArrayList<SynthWithdrawalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SynthWithdrawalEventResponse typedResponse = new SynthWithdrawalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.user = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SynthWithdrawalEventResponse> synthWithdrawalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SynthWithdrawalEventResponse>() {
            @Override
            public SynthWithdrawalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SYNTHWITHDRAWAL_EVENT, log);
                SynthWithdrawalEventResponse typedResponse = new SynthWithdrawalEventResponse();
                typedResponse.log = log;
                typedResponse.user = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SynthWithdrawalEventResponse> synthWithdrawalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SYNTHWITHDRAWAL_EVENT));
        return synthWithdrawalEventFlowable(filter);
    }

    public RemoteFunctionCall<BigInteger> MAX_ADDRESSES_FROM_RESOLVER() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAX_ADDRESSES_FROM_RESOLVER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> SELFDESTRUCT_DELAY() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SELFDESTRUCT_DELAY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> acceptOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ACCEPTOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> depositEndIndex() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEPOSITENDINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> depositStartIndex() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEPOSITSTARTINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> depositSynths(BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DEPOSITSYNTHS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple2<String, BigInteger>> deposits(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple2<String, BigInteger>>(function,
                new Callable<Tuple2<String, BigInteger>>() {
                    @Override
                    public Tuple2<String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> dtradeReceivedForEther(BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DTRADERECEIVEDFORETHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(amount)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> dtradeReceivedForSynths(BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DTRADERECEIVEDFORSYNTHS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(amount)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> exchangeEtherForDET(BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXCHANGEETHERFORDET, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> exchangeEtherForDETAtRate(BigInteger guaranteedEtherRate, BigInteger guaranteeddTradeRate, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXCHANGEETHERFORDETATRATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(guaranteedEtherRate), 
                new org.web3j.abi.datatypes.generated.Uint256(guaranteeddTradeRate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> exchangeEtherForSynths(BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXCHANGEETHERFORSYNTHS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> exchangeEtherForSynthsAtRate(BigInteger guaranteedRate, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXCHANGEETHERFORSYNTHSATRATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(guaranteedRate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> exchangeSynthsForDET(BigInteger synthAmount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXCHANGESYNTHSFORDET, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(synthAmount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> exchangeSynthsForDETAtRate(BigInteger synthAmount, BigInteger guaranteedRate) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXCHANGESYNTHSFORDETATRATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(synthAmount), 
                new org.web3j.abi.datatypes.generated.Uint256(guaranteedRate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> fundsWallet() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FUNDSWALLET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<List> getResolverAddressesRequired() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRESOLVERADDRESSESREQUIRED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray24<Bytes32>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> initiateSelfDestruct() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INITIATESELFDESTRUCT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> initiationTime() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_INITIATIONTIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> isResolverCached(String _resolver) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISRESOLVERCACHED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _resolver)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> lastPauseTime() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_LASTPAUSETIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> maxEthPurchase() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAXETHPURCHASE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> minimumDepositAmount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MINIMUMDEPOSITAMOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> nominateNewOwner(String _owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_NOMINATENEWOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> nominatedOwner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_NOMINATEDOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> resolver() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RESOLVER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<byte[]> resolverAddressesRequired(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RESOLVERADDRESSESREQUIRED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> selfDestruct() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SELFDESTRUCT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> selfDestructBeneficiary() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SELFDESTRUCTBENEFICIARY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> selfDestructInitiated() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SELFDESTRUCTINITIATED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> setFundsWallet(String _fundsWallet) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFUNDSWALLET, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _fundsWallet)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setMaxEthPurchase(BigInteger _maxEthPurchase) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETMAXETHPURCHASE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_maxEthPurchase)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setMinimumDepositAmount(BigInteger _amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETMINIMUMDEPOSITAMOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPaused(Boolean _paused) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPAUSED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Bool(_paused)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setResolverAndSyncCache(String _resolver) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETRESOLVERANDSYNCCACHE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _resolver)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setSelfDestructBeneficiary(String _beneficiary) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETSELFDESTRUCTBENEFICIARY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _beneficiary)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> smallDeposits(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SMALLDEPOSITS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> synthsReceivedForEther(BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SYNTHSRECEIVEDFORETHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(amount)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> terminateSelfDestruct() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TERMINATESELFDESTRUCT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> totalSellableDeposits() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALSELLABLEDEPOSITS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> withdrawMyDepositedSynths() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWMYDEPOSITEDSYNTHS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> withdrawdTrade(BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWDTRADE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Depot load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Depot(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Depot load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Depot(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Depot load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Depot(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Depot load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Depot(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Depot> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _owner, String _fundsWallet, String _resolver) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner), 
                new org.web3j.abi.datatypes.Address(160, _fundsWallet), 
                new org.web3j.abi.datatypes.Address(160, _resolver)));
        return deployRemoteCall(Depot.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<Depot> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _owner, String _fundsWallet, String _resolver) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner), 
                new org.web3j.abi.datatypes.Address(160, _fundsWallet), 
                new org.web3j.abi.datatypes.Address(160, _resolver)));
        return deployRemoteCall(Depot.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Depot> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _owner, String _fundsWallet, String _resolver) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner), 
                new org.web3j.abi.datatypes.Address(160, _fundsWallet), 
                new org.web3j.abi.datatypes.Address(160, _resolver)));
        return deployRemoteCall(Depot.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Depot> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _owner, String _fundsWallet, String _resolver) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner), 
                new org.web3j.abi.datatypes.Address(160, _fundsWallet), 
                new org.web3j.abi.datatypes.Address(160, _resolver)));
        return deployRemoteCall(Depot.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class ClearedDepositEventResponse extends BaseEventResponse {
        public String fromAddress;

        public String toAddress;

        public BigInteger depositIndex;

        public BigInteger fromETHAmount;

        public BigInteger toAmount;
    }

    public static class ExchangeEventResponse extends BaseEventResponse {
        public String fromCurrency;

        public BigInteger fromAmount;

        public String toCurrency;

        public BigInteger toAmount;
    }

    public static class FundsWalletUpdatedEventResponse extends BaseEventResponse {
        public String newFundsWallet;
    }

    public static class MaxEthPurchaseUpdatedEventResponse extends BaseEventResponse {
        public BigInteger amount;
    }

    public static class MinimumDepositAmountUpdatedEventResponse extends BaseEventResponse {
        public BigInteger amount;
    }

    public static class NonPayableContractEventResponse extends BaseEventResponse {
        public String receiver;

        public BigInteger amount;
    }

    public static class OwnerChangedEventResponse extends BaseEventResponse {
        public String oldOwner;

        public String newOwner;
    }

    public static class OwnerNominatedEventResponse extends BaseEventResponse {
        public String newOwner;
    }

    public static class PauseChangedEventResponse extends BaseEventResponse {
        public Boolean isPaused;
    }

    public static class SelfDestructBeneficiaryUpdatedEventResponse extends BaseEventResponse {
        public String newBeneficiary;
    }

    public static class SelfDestructInitiatedEventResponse extends BaseEventResponse {
        public BigInteger selfDestructDelay;
    }

    public static class SelfDestructTerminatedEventResponse extends BaseEventResponse {
    }

    public static class SelfDestructedEventResponse extends BaseEventResponse {
        public String beneficiary;
    }

    public static class SynthDepositEventResponse extends BaseEventResponse {
        public String user;

        public BigInteger depositIndex;

        public BigInteger amount;
    }

    public static class SynthDepositNotAcceptedEventResponse extends BaseEventResponse {
        public String user;

        public BigInteger amount;

        public BigInteger minimum;
    }

    public static class SynthDepositRemovedEventResponse extends BaseEventResponse {
        public String user;

        public BigInteger depositIndex;

        public BigInteger amount;
    }

    public static class SynthWithdrawalEventResponse extends BaseEventResponse {
        public String user;

        public BigInteger amount;
    }
}
